(()=>{"use strict";var n={392:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nul {\n    list-style: none;\n\n}\n\nli {\n    list-style: none;\n    margin-top: 5px;\n}\n\n.button {\n    margin-top: 10px;\n    padding: 5px 10px;\n    text-transform: uppercase;\n    background-color: #111;\n    color: white;\n    border-radius: 5px;\n    border: none\n}\n\n.panel {\n    display: flex;\n    gap: 10px;\n    margin: 0 auto;\n    max-width: 1200px;\n    padding: 30px 0;\n}\n\n.panel__excursions {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    gap: 10px;\n    width: 70%;\n}\n\n.excursions {\n    display: flex;\n}\n\n.excursions__item {\n    margin-bottom: 10px;\n    border: 1px solid #bbb;\n    border-radius: 5px;\n    padding: 20px;\n    width: 32%;\n    min-height: 50vh;\n    background-color: aquamarine;\n}\n\n.excursions__number {\n    width: 30px;\n    height: 20px;\n    border: none;\n    margin-left: 5px;\n    border-radius: 5px;\n}\n\n.excursions__item--prototype, .summary__item--prototype {\n    display: none\n}\n\n.panel__form {\n    background-color: #f4f4f4;\n    padding: 20px;\n    width: 30%;\n    border-radius: 5px;\n    background-color: rgb(240, 255, 127);\n\n}\n\n.uploader, .order {\n    border-bottom: 1px solid #bbb;\n    margin-bottom: 20px;\n    padding-bottom: 20px;\n}\n\n.order__field, .excursions__field, .excursions__description {\n    margin-top: 10px\n}\n\n.order__total-price {\n    font-size: 1.3rem;\n    text-transform: uppercase;\n    color: red\n}\n\n.order__field-input {\n    margin-top: 10px;\n    padding: 5px;\n    width: 100%;\n    text-transform: uppercase;\n    border-radius: 5px;\n    border: none\n}\n\n.panel__summary {\n    margin: 20px 0\n}\n\n.order__error {\n    color: red\n}\n\n.summary__btn-remove {\n    padding: 2px 5px;\n    background-color: #111;\n    color: white;\n    border-radius: 5px;\n    border: none;\n    text-decoration: none;\n}","",{version:3,sources:["webpack://./src/css/client.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;;AAEpB;;AAEA;IACI,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,yBAAyB;IACzB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB;AACJ;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,6BAA6B;IAC7B,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;IAClB,aAAa;IACb,UAAU;IACV,gBAAgB;IAChB,4BAA4B;AAChC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI;AACJ;;AAEA;IACI,yBAAyB;IACzB,aAAa;IACb,UAAU;IACV,kBAAkB;IAClB,oCAAoC;;AAExC;;AAEA;IACI,6BAA6B;IAC7B,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI;AACJ;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB;AACJ;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,kBAAkB;IAClB;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI;AACJ;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;AACzB",sourcesContent:["* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nul {\r\n    list-style: none;\r\n\r\n}\r\n\r\nli {\r\n    list-style: none;\r\n    margin-top: 5px;\r\n}\r\n\r\n.button {\r\n    margin-top: 10px;\r\n    padding: 5px 10px;\r\n    text-transform: uppercase;\r\n    background-color: #111;\r\n    color: white;\r\n    border-radius: 5px;\r\n    border: none\r\n}\r\n\r\n.panel {\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 0 auto;\r\n    max-width: 1200px;\r\n    padding: 30px 0;\r\n}\r\n\r\n.panel__excursions {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    gap: 10px;\r\n    width: 70%;\r\n}\r\n\r\n.excursions {\r\n    display: flex;\r\n}\r\n\r\n.excursions__item {\r\n    margin-bottom: 10px;\r\n    border: 1px solid #bbb;\r\n    border-radius: 5px;\r\n    padding: 20px;\r\n    width: 32%;\r\n    min-height: 50vh;\r\n    background-color: aquamarine;\r\n}\r\n\r\n.excursions__number {\r\n    width: 30px;\r\n    height: 20px;\r\n    border: none;\r\n    margin-left: 5px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.excursions__item--prototype, .summary__item--prototype {\r\n    display: none\r\n}\r\n\r\n.panel__form {\r\n    background-color: #f4f4f4;\r\n    padding: 20px;\r\n    width: 30%;\r\n    border-radius: 5px;\r\n    background-color: rgb(240, 255, 127);\r\n\r\n}\r\n\r\n.uploader, .order {\r\n    border-bottom: 1px solid #bbb;\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.order__field, .excursions__field, .excursions__description {\r\n    margin-top: 10px\r\n}\r\n\r\n.order__total-price {\r\n    font-size: 1.3rem;\r\n    text-transform: uppercase;\r\n    color: red\r\n}\r\n\r\n.order__field-input {\r\n    margin-top: 10px;\r\n    padding: 5px;\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    border-radius: 5px;\r\n    border: none\r\n}\r\n\r\n.panel__summary {\r\n    margin: 20px 0\r\n}\r\n\r\n.order__error {\r\n    color: red\r\n}\r\n\r\n.summary__btn-remove {\r\n    padding: 2px 5px;\r\n    background-color: #111;\r\n    color: white;\r\n    border-radius: 5px;\r\n    border: none;\r\n    text-decoration: none;\r\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var u=0;u<n.length;u++){var d=[].concat(n[u]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],u=t.base?s[0]+t.base:s[0],d=i[u]||0,l="".concat(u," ").concat(d);i[u]=d+1;var p=r(l),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var m=o(A,t);t.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=r(i[a]);e[c].references--}for(var s=t(n,o),u=0;u<i.length;u++){var d=r(i[u]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),i=r(569),a=r.n(i),c=r(565),s=r.n(c),u=r(216),d=r.n(u),l=r(589),p=r.n(l),A=r(392),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=new class{constructor(){this.url="http://localhost:3000"}load(n){return this._fetch(n).catch((n=>console.error(n)))}add(n,e){const r={method:"POST",body:JSON.stringify(n),headers:{"Content-Type":"application/json"}};return this._fetch(e,r).catch((n=>console.log(n)))}remove(n,e){return this._fetch(`${e}/${n}`,{method:"DELETE"}).catch((n=>console.log(n)))}update(n,e){return this._fetch(n,e).catch((n=>console.log(n)))}_fetch(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1?arguments[1]:void 0;return fetch(this.url+n,e).then((n=>n.ok?n.json():Promise.reject(n)))}};let x=[],h=[];document.addEventListener("DOMContentLoaded",(function(){console.log("client"),f.load("/excursions").then((n=>function(n){const e=document.querySelector(".panel__excursions");(function(n){[...n.children].forEach((e=>{e.classList.contains("excursions__item--prototype")||n.removeChild(e)}))})(e),function(n,e){const r=document.querySelector(".excursions__item--prototype");n.forEach((n=>{const t=r.cloneNode(!0);t.dataset.id=n.id;const o=t.querySelector(".excursions__title"),i=t.querySelector(".excursions__description"),a=t.querySelector(".excursions__adult-price"),c=t.querySelector(".excursions__child-price");o.textContent=n.title,i.textContent=n.description,a.textContent=Number(n.adultPrice),c.textContent=Number(n.childPrice),t.classList.remove("excursions__item--prototype"),e.appendChild(t)}))}(n,e)}(n))),document.querySelector(".panel__excursions").addEventListener("click",(n=>{if(n.preventDefault(),"dodaj do zamówienia"===n.target.value){const e=function(n){const e=n.target.parentNode.parentNode,r=e.parentNode.querySelector(".excursions__title"),t=e.querySelector(".excursions__adult-price"),o=e.querySelector(".excursions__child-price"),[i,a]=e.elements,c={title:r.textContent,adultPrice:t.textContent,adultNumber:Number(i.value),childPrice:o.textContent,childNumber:Number(a.value)};return 0===c.adultNumber&&0===c.childNumber?alert('Uzupełnij pole "dorosły" lub "dziecko"'):c}(n);if(e){const r=x.findIndex((n=>n.title===e.title));-1!==r?(x[r].adultNumber+=e.adultNumber,x[r].childNumber+=e.childNumber):x.push(e),function(){const n=document.querySelector(".order__total-price-value");let e=0;x.forEach((n=>{e=e+n.adultPrice*n.adultNumber+n.childPrice*n.childNumber})),n.textContent=e+"PLN"}(),function(){const n=document.querySelector(".panel__summary"),e=document.querySelector(".summary__item--prototype");[...n.children].forEach((e=>{e.classList.contains("summary__item--prototype")||n.removeChild(e)})),function(n,e){x.forEach((r=>{const t=n.cloneNode(!0);t.classList.remove("summary__item--prototype"),function(n,e,r){const t=e.querySelector(".summary__name"),o=e.querySelector(".summary__total-price"),i=e.querySelector(".summary__adult-price"),a=e.querySelector(".summary__child-price"),c=e.querySelector(".summary__adult-number"),s=e.querySelector(".summary__child-number");let{title:u,adultPrice:d,adultNumber:l,childPrice:p,childNumber:A}=n;const m=l*d+A*p;t.textContent=u,o.textContent=m+"PLN",i.textContent=d+"PLN",a.textContent=p+"PLN",c.textContent=l,s.textContent=A,r.appendChild(e)}(r,t,e)}))}(e,n)}(),function(n){const e=n.target.parentNode.parentNode,[r,t]=e.elements;r.value="",t.value=""}(n)}}})),function(){const n=document.querySelector(".panel__summary");n&&n.addEventListener("click",(n=>{if(n.preventDefault(),"usuń"===n.target.title){const e=n.target.parentNode.parentNode,r=e.querySelector(".summary__name").textContent;e.parentNode.removeChild(e);const t=x.findIndex((n=>n.title===r));x.splice(t,1)}}))}(),function(){const n=document.querySelector(".panel__order");n.addEventListener("submit",(e=>{e.preventDefault(),function(){h=[];const n=document.querySelector(".panel__form");document.querySelectorAll(".order__error").forEach((e=>{n.removeChild(e)}))}();const r=document.querySelector(".order__total-price-value"),t=r.textContent,[o,i]=n.elements,a=o.value,c=i.value;if(function(n,e){0===n.length&&h.push('Pole "imię i nazwisko" nie może być puste'),e.includes("@")||h.push('Pole "email" nie może być puste i musi zawierać znak "@"'),0===x.length&&h.push("Brak wycieczek w koszyku")}(a,c),0===h.length&&0!==x.length||(function(){const n=document.querySelector(".panel__form");h.forEach((e=>{const r=document.createElement("li");r.classList.add("order__error"),r.textContent=e,n.appendChild(r)}))}(),0)){const n={name:a,email:c,totalSum:t,orderDetails:x};f.add(n,"/orders"),function(n,e,r){const t=document.querySelector(".panel__summary");[...t.children].forEach((n=>{n.classList.contains("summary__item--prototype")||t.removeChild(n)})),x=[],n.value="",e.value="",r.textContent="0PLN"}(o,i,r),console.log("Zamówienie zostało wysłane"),alert("Zamówienie zostało wysłane")}}))}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,